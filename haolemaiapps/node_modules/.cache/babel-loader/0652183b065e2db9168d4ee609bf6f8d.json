{"remainingRequest":"C:\\Users\\web\\Desktop\\好乐买\\yanxuanapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\好乐买\\yanxuanapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\好乐买\\yanxuanapp\\src\\components\\xz\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\好乐买\\yanxuanapp\\src\\components\\xz\\Cart.vue","mtime":1562299082000},{"path":"C:\\Users\\web\\Desktop\\好乐买\\yanxuanapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\好乐买\\yanxuanapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\好乐买\\yanxuanapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  //路由接收到 tom的订单，通过axios请求数据\n  data: function data() {\n    return {\n      list: []\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    loadMore: function loadMore() {\n      var _this = this;\n\n      var url = \"cart\";\n      this.axios.get(url).then(function (result) {\n        console.log(result); //this.list=result.data.data;\n        //1.获取服务器数组\n\n        var rows = result.data.data; //2.创建循环为数组中每个对象添加cb属性\n        //cb控制商品前复选框\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            //添加cb属性 ，用在按钮的checked\n            item.cb = false;\n\n            _this.$store.commit(\"increment\");\n          } //3.将新数据保存\n\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this.list = rows; //       console.log(this.list);\n      });\n    },\n    selectAll: function selectAll(e) {\n      //使用事件对象获得当前的属性 checked\n      var cb = e.target.checked; //依据状态修改列表cb\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          item.cb = cb; //因为每个单选框都使用了双向绑定，循环赋值为 全选按钮的checked值切换全选全不选\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    delItem: function delItem(e) {\n      var _this2 = this;\n\n      //1.获取当前商品id\n      var id = e.target.dataset.id; // console.log(id);\n      //2.显示交互确认框\n\n      this.$messagebox.confirm(\"是否删除指定数据\").then(function (action) {\n        //4.发送ajax删除数据\n        var url = \"delItem\";\n        var obj = {\n          id: id\n        };\n\n        _this2.axios.get(url, {\n          params: obj\n        }).then(function (result) {\n          console.log(result);\n\n          _this2.loadMore(); //    if(result.data.code==1){\n          //        this.list=this.list.slice(1);\n          //    }\n\n        });\n      }).catch(function (err) {// console.log(err);\n      }); //3.如果用户选择“确认\"\n      //5.如果用户选择 “取消”\n    },\n    delAll: function delAll() {\n      var _this3 = this;\n\n      //删除多个商品\n      //1.创建变量保存空字符串\n      var str = \"\"; //2.创建循环拼接字符串内容\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          if (item.cb) {\n            str += item.id + ',';\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      str = str.substring(0, str.length - 1);\n\n      if (str.length == 0) {\n        this.$toast('请选择商品');\n        return;\n      }\n\n      console.log(str); //3.判断如果用户没选商品提示\n      //4.发送ajax请求\n\n      var url = \"delAll\";\n      var obj = {\n        ids: str\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        _this3.loadMore();\n      }); //5.重新加载数据\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,eAAA;AAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA;AADA,KAAA;AAGA,GALA;AAMA,SANA,qBAMA;AACA,SAAA,QAAA;AACA,GARA;AASA,WAAA;AACA,YADA,sBACA;AAAA;;AACA,UAAA,MAAA,MAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,kBAAA;AACA,gBAAA,GAAA,CAAA,MAAA,EADA,CAEA;AACA;;AACA,YAAA,OAAA,OAAA,IAAA,CAAA,IAAA,CAJA,CAKA;AACA;;AANA;AAAA;AAAA;;AAAA;AAOA,+BAAA,IAAA,8HAAA;AAAA,gBAAA,IAAA;AACA;AACA,iBAAA,EAAA,GAAA,KAAA;;AAEA,kBAAA,MAAA,CAAA,MAAA,CAAA,WAAA;AACA,WAZA,CAaA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,cAAA,IAAA,GAAA,IAAA,CAdA,CAeA;AACA,OAhBA;AAiBA,KApBA;AAqBA,aArBA,qBAqBA,CArBA,EAqBA;AAAA;AACA,UAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CADA,CAEA;;AAFA;AAAA;AAAA;;AAAA;AAGA,8BAAA,KAAA,IAAA,mIAAA;AAAA,cAAA,IAAA;AACA,eAAA,EAAA,GAAA,EAAA,CADA,CACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KA3BA;AA4BA,WA5BA,mBA4BA,CA5BA,EA4BA;AAAA;;AACA;AACA,UAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAFA,CAGA;AACA;;AACA,WAAA,WAAA,CAAA,OAAA,CAAA,UAAA,EAAA,IAAA,CAAA,kBAAA;AACA;AACA,YAAA,MAAA,SAAA;AACA,YAAA,MAAA;AAAA,cAAA;AAAA,SAAA;;AACA,eAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,kBAAA;AAAA,SAAA,EAAA,IAAA,CAAA,kBAAA;AACA,kBAAA,GAAA,CAAA,MAAA;;AACA,iBAAA,QAAA,GAFA,CAGA;AACA;AACA;;AACA,SANA;AAOA,OAXA,EAWA,KAXA,CAWA,eAAA,CACA;AACA,OAbA,EALA,CAmBA;AAIA;AACA,KApDA;AAsDA,UAtDA,oBAsDA;AAAA;;AAAA;AACA;AACA,UAAA,MAAA,EAAA,CAFA,CAGA;;AAHA;AAAA;AAAA;;AAAA;AAIA,8BAAA,KAAA,IAAA,mIAAA;AAAA,cAAA,IAAA;;AACA,cAAA,KAAA,EAAA,EAAA;AACA,mBAAA,KAAA,EAAA,GAAA,GAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,YAAA,IAAA,SAAA,CAAA,CAAA,EAAA,IAAA,MAAA,GAAA,CAAA,CAAA;;AACA,UAAA,IAAA,MAAA,IAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,OAAA;AACA;AACA;;AACA,cAAA,GAAA,CAAA,GAAA,EAdA,CAeA;AAEA;;AACA,UAAA,MAAA,QAAA;AACA,UAAA,MAAA;AAAA,aAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,kBAAA;AACA,eAAA,QAAA;AACA,OAFA,EApBA,CAuBA;AAEA;AA/EA;AATA,CAAA","sourcesContent":["<template>\r\n    <div class=\"cart\">\r\n        <div> <!--全选按钮 -->\r\n          <div class=\"selectAll\">\r\n              全选\r\n              <input type=\"checkbox\" @change='selectAll'>  \r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"cart-item\" v-for=\"(item,i) of list\" :key=\"i\">  <!--商品列表-->\r\n            <div class=\"leftImgText\">\r\n                <input type=\"checkbox\" v-model=\"item.cb\">\r\n                <img :src=\"'http://127.0.0.1:3000/img/'+item.img_url\"/>\r\n                <div class=\"price\">\r\n                    <span v-text=\"item.price\"></span>\r\n                </div>\r\n            </div>\r\n            <mt-button :data-id=\"item.id\" @click=\"delItem\">删除</mt-button>\r\n        </div>\r\n\r\n        <div>  <!--删除选中商品-->\r\n           <mt-button type=\"default\" @click=\"delAll\">删除选中商品</mt-button>\r\n           <h3>\r\n              购物车数量：<span style=\"color:red;\">{{$store.getters.getCartCount}}</span>\r\n           </h3>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {    //路由接收到 tom的订单，通过axios请求数据\r\n    data(){\r\n        return {\r\n            list:[]\r\n        }\r\n    },\r\n    created(){\r\n        this.loadMore();\r\n    },\r\n    methods:{\r\n        loadMore(){\r\n            var url=\"cart\";\r\n            this.axios.get(url).then(result=>{\r\n                console.log(result);\r\n                //this.list=result.data.data;\r\n                //1.获取服务器数组\r\n                var rows=result.data.data;\r\n                //2.创建循环为数组中每个对象添加cb属性\r\n                 //cb控制商品前复选框\r\n                for(var item of rows){\r\n                    //添加cb属性 ，用在按钮的checked\r\n                    item.cb=false;\r\n\r\n                    this.$store.commit(\"increment\");\r\n                }\r\n                //3.将新数据保存\r\n                this.list=rows;\r\n         //       console.log(this.list);\r\n            });\r\n        },\r\n        selectAll(e){  //使用事件对象获得当前的属性 checked\r\n            var cb=e.target.checked;\r\n            //依据状态修改列表cb\r\n            for(var item of this.list){\r\n                item.cb=cb;   //因为每个单选框都使用了双向绑定，循环赋值为 全选按钮的checked值切换全选全不选\r\n            }\r\n        },\r\n         delItem(e){\r\n             //1.获取当前商品id\r\n            var id=e.target.dataset.id;\r\n           // console.log(id);\r\n             //2.显示交互确认框\r\n     this.$messagebox.confirm(\"是否删除指定数据\").then(action=>{\r\n          //4.发送ajax删除数据\r\n          var url=\"delItem\";\r\n          var obj={id:id};\r\n           this.axios.get(url,{params:obj}).then(result=>{\r\n               console.log(result);\r\n               this.loadMore();\r\n            //    if(result.data.code==1){\r\n            //        this.list=this.list.slice(1);\r\n            //    }\r\n           });\r\n                       }).catch(err=>{\r\n              // console.log(err);\r\n           });\r\n             //3.如果用户选择“确认\"\r\n            \r\n            \r\n\r\n             //5.如果用户选择 “取消”\r\n         },\r\n\r\n         delAll(){  //删除多个商品\r\n           //1.创建变量保存空字符串\r\n                var str=\"\";\r\n           //2.创建循环拼接字符串内容\r\n            for(var item of this.list){\r\n                if(item.cb){\r\n                    str+=item.id+','\r\n                }\r\n            }\r\n            str=str.substring(0,str.length-1);\r\n            if(str.length==0){\r\n                this.$toast('请选择商品');\r\n                return;\r\n            }\r\n            console.log(str);\r\n           //3.判断如果用户没选商品提示\r\n            \r\n           //4.发送ajax请求\r\n                var url=\"delAll\";\r\n                var obj={ids:str};\r\n                this.axios.get(url,{params:obj}).then(result=>{\r\n                    this.loadMore();\r\n                });\r\n           //5.重新加载数据\r\n             \r\n         }\r\n\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n        /*最外层弹性布局*/\r\n    .cart-item{\r\n        display:flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        border-bottom:1px solid #666;\r\n    }\r\n\r\n     .leftImgText{\r\n         display:flex;\r\n\r\n         }\r\n         .leftImgText img{width:50px;height: 50px;}\r\n</style>"],"sourceRoot":"src\\components\\xz"}]}